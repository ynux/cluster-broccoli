# Settings for Play
play {
  # HTTP filters for Play
  http.filters = "de.frosner.broccoli.http.Filters"

  # Default application modules
  modules {
    # Base modules for Broccoli
    enabled += "de.frosner.broccoli.BroccoliModule"
    enabled += "de.frosner.broccoli.nomad.NomadModule"
    enabled += "de.frosner.broccoli.websocket.WebSocketModule"
    enabled += "de.frosner.broccoli.templates.TemplateModule"
    enabled += "de.frosner.broccoli.templates.jinjava.JinjavaModule"
    enabled += "de.frosner.broccoli.signal.SignalModule"
    enabled += "de.frosner.broccoli.instances.InstanceModule"
    enabled += "de.frosner.broccoli.auth.AuthModule"

    # Configurable modules for Broccoli
    # Store instances in file system
    enabled += "de.frosner.broccoli.instances.storage.filesystem.FileSystemStorageModule"
    # To store instances in CouchDB add the following to application.conf
    # disabled += "de.frosner.broccoli.instances.storage.filesystem.FileSystemStorageModule"
    # enabled += "de.frosner.broccoli.instances.storage.couchdb.CouchDBStorageModule"
  }

  crypto.secret = "IN_PRODUCTION_CHANGE_THIS_TO_A_LONG_RANDOM_STRING"
  # ws.ssl {
  #   trustManager = {
  #     stores = [
  #       { type = "PEM", path = "./nomad-ca.pem" }
  #     ]
  #   }
  #   keyManager = {
  #     stores = [
  #       { type = "JKS", path = "./broccoli.global.nomad.jks", password = "changeit" }
  #     ]
  #   }
  #   debug = {
  #     ssl = true
  #     trustmanager = true
  #     keymanager = true
  #   }
  # }
}


# Settings for Broccoli
broccoli {

  # How to connect to Nomad
  nomad {
    # The URL of the Nomad client to be used by Broccoli.
    url = "http://localhost:4646"
    token-env-name = "NOMAD_BROCCOLI_TOKEN"
    namespaces-enabled = false
    namespace-variable = "oe"
  }

  consul {
    url = "http://localhost:8500"
  }

  # The frequency by which to ask Nomad and Consul for running tasks and services respectively
  polling.frequency = 1

  # How to load Broccoli templates
  templates {
    # The filesystem path to load templates from
    path = "./templates"
    # jinjava configuration
    jinjava {
      trim-blocks = false
      lstrip-blocks = false
      max-render-depth = 10
      read-only-resolver = true
      enable-recursive-macro-calls = false
      fail-on-unknown-tokens = true
      max-output-size = 0
      nested-interpretation-enabled = true
    }
  }

  # Configuration for Broccoli's Websocket connection with the webui
  web-socket {
    # How long to cache responses to websocket requests in Broccoli
    cache-timeout = 3 seconds
  }

  # How to configure and save instances
  instances {

    # How to store instances
    storage {
      # How to store instances on the filesystem (only if FileSystemStorageModule is enabled, see above)
      fs {
        # The filesystem url to load instances from
        path = "./instances"
      }

      # How to store instances in CouchDB (only if CouchDBStorageModule is enabled, see above)
      couchdb {
        # The CouchDB URL
        url = "http://localhost:5984"
        # The name of the database on CouchDB
        database = "broccoli_instances"
      }
    }

  }

  # Broccoli authentication.
  #
  # See https://github.com/FRosner/cluster-broccoli/wiki/Security for more information.
  auth {
    # Session settings
    session {
      # Inactivity time to automatic logout
      timeout = 1 hour
      # Whether a user can login multiple times concurrently
      allow-multi-login = true
    }

    cookie {
      # Whether to mark the cookie as secure.  Turn off when running Broccoli over HTTP
      secure = true
    }

    # How many failed logins are allowed before an account is locked
    allowed-failed-logins = 3

    # Authentication mode:
    # none disables authentication
    # conf authenticates against the list of users in broccoli.auth.conf.accounts
    mode = none
    # Accounts to use when auth.mode is "conf"
    conf {
      accounts = []
    }
  }
}
